/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sphms.common.service.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Payment service. Represents a row in the &quot;SPHMS_Payment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.sphms.common.service.model.impl.PaymentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.sphms.common.service.model.impl.PaymentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Payment
 * @see com.sphms.common.service.model.impl.PaymentImpl
 * @see com.sphms.common.service.model.impl.PaymentModelImpl
 * @generated
 */
@ProviderType
public interface PaymentModel extends BaseModel<Payment> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a payment model instance should use the {@link Payment} interface instead.
	 */

	/**
	 * Returns the primary key of this payment.
	 *
	 * @return the primary key of this payment
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this payment.
	 *
	 * @param primaryKey the primary key of this payment
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the payment ID of this payment.
	 *
	 * @return the payment ID of this payment
	 */
	public long getPaymentId();

	/**
	 * Sets the payment ID of this payment.
	 *
	 * @param paymentId the payment ID of this payment
	 */
	public void setPaymentId(long paymentId);

	/**
	 * Returns the billing ID of this payment.
	 *
	 * @return the billing ID of this payment
	 */
	public long getBillingId();

	/**
	 * Sets the billing ID of this payment.
	 *
	 * @param billingId the billing ID of this payment
	 */
	public void setBillingId(long billingId);

	/**
	 * Returns the client ID of this payment.
	 *
	 * @return the client ID of this payment
	 */
	public long getClientId();

	/**
	 * Sets the client ID of this payment.
	 *
	 * @param clientId the client ID of this payment
	 */
	public void setClientId(long clientId);

	/**
	 * Returns the amount of this payment.
	 *
	 * @return the amount of this payment
	 */
	public double getAmount();

	/**
	 * Sets the amount of this payment.
	 *
	 * @param amount the amount of this payment
	 */
	public void setAmount(double amount);

	/**
	 * Returns the cheque no of this payment.
	 *
	 * @return the cheque no of this payment
	 */
	@AutoEscape
	public String getChequeNo();

	/**
	 * Sets the cheque no of this payment.
	 *
	 * @param chequeNo the cheque no of this payment
	 */
	public void setChequeNo(String chequeNo);

	/**
	 * Returns the tds of this payment.
	 *
	 * @return the tds of this payment
	 */
	public double getTds();

	/**
	 * Sets the tds of this payment.
	 *
	 * @param tds the tds of this payment
	 */
	public void setTds(double tds);

	/**
	 * Returns the deduction of this payment.
	 *
	 * @return the deduction of this payment
	 */
	public double getDeduction();

	/**
	 * Sets the deduction of this payment.
	 *
	 * @param deduction the deduction of this payment
	 */
	public void setDeduction(double deduction);

	/**
	 * Returns the description of this payment.
	 *
	 * @return the description of this payment
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this payment.
	 *
	 * @param description the description of this payment
	 */
	public void setDescription(String description);

	/**
	 * Returns the payment date of this payment.
	 *
	 * @return the payment date of this payment
	 */
	public Date getPaymentDate();

	/**
	 * Sets the payment date of this payment.
	 *
	 * @param paymentDate the payment date of this payment
	 */
	public void setPaymentDate(Date paymentDate);

	/**
	 * Returns the create date of this payment.
	 *
	 * @return the create date of this payment
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this payment.
	 *
	 * @param createDate the create date of this payment
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the created by of this payment.
	 *
	 * @return the created by of this payment
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this payment.
	 *
	 * @param createdBy the created by of this payment
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the modified date of this payment.
	 *
	 * @return the modified date of this payment
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this payment.
	 *
	 * @param modifiedDate the modified date of this payment
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the modified by of this payment.
	 *
	 * @return the modified by of this payment
	 */
	public long getModifiedBy();

	/**
	 * Sets the modified by of this payment.
	 *
	 * @param modifiedBy the modified by of this payment
	 */
	public void setModifiedBy(long modifiedBy);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Payment payment);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Payment> toCacheModel();

	@Override
	public Payment toEscapedModel();

	@Override
	public Payment toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}