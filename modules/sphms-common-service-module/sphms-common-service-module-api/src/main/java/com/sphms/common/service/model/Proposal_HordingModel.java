/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sphms.common.service.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import com.sphms.common.service.service.persistence.Proposal_HordingPK;

import java.io.Serializable;

/**
 * The base model interface for the Proposal_Hording service. Represents a row in the &quot;SPHMS_Proposal_Hording&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.sphms.common.service.model.impl.Proposal_HordingModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.sphms.common.service.model.impl.Proposal_HordingImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Proposal_Hording
 * @see com.sphms.common.service.model.impl.Proposal_HordingImpl
 * @see com.sphms.common.service.model.impl.Proposal_HordingModelImpl
 * @generated
 */
@ProviderType
public interface Proposal_HordingModel extends BaseModel<Proposal_Hording> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a proposal_ hording model instance should use the {@link Proposal_Hording} interface instead.
	 */

	/**
	 * Returns the primary key of this proposal_ hording.
	 *
	 * @return the primary key of this proposal_ hording
	 */
	public Proposal_HordingPK getPrimaryKey();

	/**
	 * Sets the primary key of this proposal_ hording.
	 *
	 * @param primaryKey the primary key of this proposal_ hording
	 */
	public void setPrimaryKey(Proposal_HordingPK primaryKey);

	/**
	 * Returns the proposal ID of this proposal_ hording.
	 *
	 * @return the proposal ID of this proposal_ hording
	 */
	public long getProposalId();

	/**
	 * Sets the proposal ID of this proposal_ hording.
	 *
	 * @param proposalId the proposal ID of this proposal_ hording
	 */
	public void setProposalId(long proposalId);

	/**
	 * Returns the hording ID of this proposal_ hording.
	 *
	 * @return the hording ID of this proposal_ hording
	 */
	public long getHordingId();

	/**
	 * Sets the hording ID of this proposal_ hording.
	 *
	 * @param hordingId the hording ID of this proposal_ hording
	 */
	public void setHordingId(long hordingId);

	/**
	 * Returns the mounting charge of this proposal_ hording.
	 *
	 * @return the mounting charge of this proposal_ hording
	 */
	public double getMountingCharge();

	/**
	 * Sets the mounting charge of this proposal_ hording.
	 *
	 * @param mountingCharge the mounting charge of this proposal_ hording
	 */
	public void setMountingCharge(double mountingCharge);

	/**
	 * Returns the printing charge of this proposal_ hording.
	 *
	 * @return the printing charge of this proposal_ hording
	 */
	public double getPrintingCharge();

	/**
	 * Sets the printing charge of this proposal_ hording.
	 *
	 * @param printingCharge the printing charge of this proposal_ hording
	 */
	public void setPrintingCharge(double printingCharge);

	/**
	 * Returns the units of this proposal_ hording.
	 *
	 * @return the units of this proposal_ hording
	 */
	public int getUnits();

	/**
	 * Sets the units of this proposal_ hording.
	 *
	 * @param units the units of this proposal_ hording
	 */
	public void setUnits(int units);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Proposal_Hording proposal_Hording);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Proposal_Hording> toCacheModel();

	@Override
	public Proposal_Hording toEscapedModel();

	@Override
	public Proposal_Hording toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}