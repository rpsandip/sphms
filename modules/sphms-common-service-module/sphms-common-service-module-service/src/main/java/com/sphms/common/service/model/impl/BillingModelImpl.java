/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sphms.common.service.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.sphms.common.service.model.Billing;
import com.sphms.common.service.model.BillingModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Billing service. Represents a row in the &quot;SPHMS_Billing&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link BillingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BillingImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see BillingImpl
 * @see Billing
 * @see BillingModel
 * @generated
 */
@ProviderType
public class BillingModelImpl extends BaseModelImpl<Billing>
	implements BillingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a billing model instance should use the {@link Billing} interface instead.
	 */
	public static final String TABLE_NAME = "SPHMS_Billing";
	public static final Object[][] TABLE_COLUMNS = {
			{ "billingId", Types.BIGINT },
			{ "customCompanyId", Types.BIGINT },
			{ "billNo", Types.VARCHAR },
			{ "internalBillNo", Types.VARCHAR },
			{ "bookingId", Types.BIGINT },
			{ "clientId", Types.BIGINT },
			{ "billFileEntryId", Types.BIGINT },
			{ "clientPANNo", Types.VARCHAR },
			{ "clientPONumber", Types.VARCHAR },
			{ "clientGSTNumber", Types.VARCHAR },
			{ "display", Types.VARCHAR },
			{ "accessAmount", Types.DOUBLE },
			{ "pendingAmount", Types.DOUBLE },
			{ "financialYear", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "publishDate", Types.TIMESTAMP },
			{ "createDate", Types.TIMESTAMP },
			{ "createdBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("billingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("customCompanyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("billNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("internalBillNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bookingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("clientId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("billFileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("clientPANNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("clientPONumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("clientGSTNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("display", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accessAmount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("pendingAmount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("financialYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("publishDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table SPHMS_Billing (billingId LONG not null primary key,customCompanyId LONG,billNo VARCHAR(75) null,internalBillNo VARCHAR(75) null,bookingId LONG,clientId LONG,billFileEntryId LONG,clientPANNo VARCHAR(75) null,clientPONumber VARCHAR(75) null,clientGSTNumber VARCHAR(75) null,display VARCHAR(75) null,accessAmount DOUBLE,pendingAmount DOUBLE,financialYear VARCHAR(75) null,status INTEGER,publishDate DATE null,createDate DATE null,createdBy LONG,modifiedDate DATE null,modifiedBy LONG)";
	public static final String TABLE_SQL_DROP = "drop table SPHMS_Billing";
	public static final String ORDER_BY_JPQL = " ORDER BY billing.billingId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPHMS_Billing.billingId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.sphms.common.service.model.Billing"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.sphms.common.service.model.Billing"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.sphms.common.service.model.Billing"),
			true);
	public static final long BOOKINGID_COLUMN_BITMASK = 1L;
	public static final long CLIENTID_COLUMN_BITMASK = 2L;
	public static final long BILLINGID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.sphms.common.service.service.util.PropsUtil.get(
				"lock.expiration.time.com.sphms.common.service.model.Billing"));

	public BillingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _billingId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBillingId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _billingId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Billing.class;
	}

	@Override
	public String getModelClassName() {
		return Billing.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("billingId", getBillingId());
		attributes.put("customCompanyId", getCustomCompanyId());
		attributes.put("billNo", getBillNo());
		attributes.put("internalBillNo", getInternalBillNo());
		attributes.put("bookingId", getBookingId());
		attributes.put("clientId", getClientId());
		attributes.put("billFileEntryId", getBillFileEntryId());
		attributes.put("clientPANNo", getClientPANNo());
		attributes.put("clientPONumber", getClientPONumber());
		attributes.put("clientGSTNumber", getClientGSTNumber());
		attributes.put("display", getDisplay());
		attributes.put("accessAmount", getAccessAmount());
		attributes.put("pendingAmount", getPendingAmount());
		attributes.put("financialYear", getFinancialYear());
		attributes.put("status", getStatus());
		attributes.put("publishDate", getPublishDate());
		attributes.put("createDate", getCreateDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("modifiedBy", getModifiedBy());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long billingId = (Long)attributes.get("billingId");

		if (billingId != null) {
			setBillingId(billingId);
		}

		Long customCompanyId = (Long)attributes.get("customCompanyId");

		if (customCompanyId != null) {
			setCustomCompanyId(customCompanyId);
		}

		String billNo = (String)attributes.get("billNo");

		if (billNo != null) {
			setBillNo(billNo);
		}

		String internalBillNo = (String)attributes.get("internalBillNo");

		if (internalBillNo != null) {
			setInternalBillNo(internalBillNo);
		}

		Long bookingId = (Long)attributes.get("bookingId");

		if (bookingId != null) {
			setBookingId(bookingId);
		}

		Long clientId = (Long)attributes.get("clientId");

		if (clientId != null) {
			setClientId(clientId);
		}

		Long billFileEntryId = (Long)attributes.get("billFileEntryId");

		if (billFileEntryId != null) {
			setBillFileEntryId(billFileEntryId);
		}

		String clientPANNo = (String)attributes.get("clientPANNo");

		if (clientPANNo != null) {
			setClientPANNo(clientPANNo);
		}

		String clientPONumber = (String)attributes.get("clientPONumber");

		if (clientPONumber != null) {
			setClientPONumber(clientPONumber);
		}

		String clientGSTNumber = (String)attributes.get("clientGSTNumber");

		if (clientGSTNumber != null) {
			setClientGSTNumber(clientGSTNumber);
		}

		String display = (String)attributes.get("display");

		if (display != null) {
			setDisplay(display);
		}

		Double accessAmount = (Double)attributes.get("accessAmount");

		if (accessAmount != null) {
			setAccessAmount(accessAmount);
		}

		Double pendingAmount = (Double)attributes.get("pendingAmount");

		if (pendingAmount != null) {
			setPendingAmount(pendingAmount);
		}

		String financialYear = (String)attributes.get("financialYear");

		if (financialYear != null) {
			setFinancialYear(financialYear);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Date publishDate = (Date)attributes.get("publishDate");

		if (publishDate != null) {
			setPublishDate(publishDate);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}
	}

	@Override
	public long getBillingId() {
		return _billingId;
	}

	@Override
	public void setBillingId(long billingId) {
		_billingId = billingId;
	}

	@Override
	public long getCustomCompanyId() {
		return _customCompanyId;
	}

	@Override
	public void setCustomCompanyId(long customCompanyId) {
		_customCompanyId = customCompanyId;
	}

	@Override
	public String getBillNo() {
		if (_billNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _billNo;
		}
	}

	@Override
	public void setBillNo(String billNo) {
		_billNo = billNo;
	}

	@Override
	public String getInternalBillNo() {
		if (_internalBillNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _internalBillNo;
		}
	}

	@Override
	public void setInternalBillNo(String internalBillNo) {
		_internalBillNo = internalBillNo;
	}

	@Override
	public long getBookingId() {
		return _bookingId;
	}

	@Override
	public void setBookingId(long bookingId) {
		_columnBitmask |= BOOKINGID_COLUMN_BITMASK;

		if (!_setOriginalBookingId) {
			_setOriginalBookingId = true;

			_originalBookingId = _bookingId;
		}

		_bookingId = bookingId;
	}

	public long getOriginalBookingId() {
		return _originalBookingId;
	}

	@Override
	public long getClientId() {
		return _clientId;
	}

	@Override
	public void setClientId(long clientId) {
		_columnBitmask |= CLIENTID_COLUMN_BITMASK;

		if (!_setOriginalClientId) {
			_setOriginalClientId = true;

			_originalClientId = _clientId;
		}

		_clientId = clientId;
	}

	public long getOriginalClientId() {
		return _originalClientId;
	}

	@Override
	public long getBillFileEntryId() {
		return _billFileEntryId;
	}

	@Override
	public void setBillFileEntryId(long billFileEntryId) {
		_billFileEntryId = billFileEntryId;
	}

	@Override
	public String getClientPANNo() {
		if (_clientPANNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _clientPANNo;
		}
	}

	@Override
	public void setClientPANNo(String clientPANNo) {
		_clientPANNo = clientPANNo;
	}

	@Override
	public String getClientPONumber() {
		if (_clientPONumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _clientPONumber;
		}
	}

	@Override
	public void setClientPONumber(String clientPONumber) {
		_clientPONumber = clientPONumber;
	}

	@Override
	public String getClientGSTNumber() {
		if (_clientGSTNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _clientGSTNumber;
		}
	}

	@Override
	public void setClientGSTNumber(String clientGSTNumber) {
		_clientGSTNumber = clientGSTNumber;
	}

	@Override
	public String getDisplay() {
		if (_display == null) {
			return StringPool.BLANK;
		}
		else {
			return _display;
		}
	}

	@Override
	public void setDisplay(String display) {
		_display = display;
	}

	@Override
	public double getAccessAmount() {
		return _accessAmount;
	}

	@Override
	public void setAccessAmount(double accessAmount) {
		_accessAmount = accessAmount;
	}

	@Override
	public double getPendingAmount() {
		return _pendingAmount;
	}

	@Override
	public void setPendingAmount(double pendingAmount) {
		_pendingAmount = pendingAmount;
	}

	@Override
	public String getFinancialYear() {
		if (_financialYear == null) {
			return StringPool.BLANK;
		}
		else {
			return _financialYear;
		}
	}

	@Override
	public void setFinancialYear(String financialYear) {
		_financialYear = financialYear;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@Override
	public Date getPublishDate() {
		return _publishDate;
	}

	@Override
	public void setPublishDate(Date publishDate) {
		_publishDate = publishDate;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Billing.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Billing toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Billing)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BillingImpl billingImpl = new BillingImpl();

		billingImpl.setBillingId(getBillingId());
		billingImpl.setCustomCompanyId(getCustomCompanyId());
		billingImpl.setBillNo(getBillNo());
		billingImpl.setInternalBillNo(getInternalBillNo());
		billingImpl.setBookingId(getBookingId());
		billingImpl.setClientId(getClientId());
		billingImpl.setBillFileEntryId(getBillFileEntryId());
		billingImpl.setClientPANNo(getClientPANNo());
		billingImpl.setClientPONumber(getClientPONumber());
		billingImpl.setClientGSTNumber(getClientGSTNumber());
		billingImpl.setDisplay(getDisplay());
		billingImpl.setAccessAmount(getAccessAmount());
		billingImpl.setPendingAmount(getPendingAmount());
		billingImpl.setFinancialYear(getFinancialYear());
		billingImpl.setStatus(getStatus());
		billingImpl.setPublishDate(getPublishDate());
		billingImpl.setCreateDate(getCreateDate());
		billingImpl.setCreatedBy(getCreatedBy());
		billingImpl.setModifiedDate(getModifiedDate());
		billingImpl.setModifiedBy(getModifiedBy());

		billingImpl.resetOriginalValues();

		return billingImpl;
	}

	@Override
	public int compareTo(Billing billing) {
		long primaryKey = billing.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Billing)) {
			return false;
		}

		Billing billing = (Billing)obj;

		long primaryKey = billing.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		BillingModelImpl billingModelImpl = this;

		billingModelImpl._originalBookingId = billingModelImpl._bookingId;

		billingModelImpl._setOriginalBookingId = false;

		billingModelImpl._originalClientId = billingModelImpl._clientId;

		billingModelImpl._setOriginalClientId = false;

		billingModelImpl._setModifiedDate = false;

		billingModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Billing> toCacheModel() {
		BillingCacheModel billingCacheModel = new BillingCacheModel();

		billingCacheModel.billingId = getBillingId();

		billingCacheModel.customCompanyId = getCustomCompanyId();

		billingCacheModel.billNo = getBillNo();

		String billNo = billingCacheModel.billNo;

		if ((billNo != null) && (billNo.length() == 0)) {
			billingCacheModel.billNo = null;
		}

		billingCacheModel.internalBillNo = getInternalBillNo();

		String internalBillNo = billingCacheModel.internalBillNo;

		if ((internalBillNo != null) && (internalBillNo.length() == 0)) {
			billingCacheModel.internalBillNo = null;
		}

		billingCacheModel.bookingId = getBookingId();

		billingCacheModel.clientId = getClientId();

		billingCacheModel.billFileEntryId = getBillFileEntryId();

		billingCacheModel.clientPANNo = getClientPANNo();

		String clientPANNo = billingCacheModel.clientPANNo;

		if ((clientPANNo != null) && (clientPANNo.length() == 0)) {
			billingCacheModel.clientPANNo = null;
		}

		billingCacheModel.clientPONumber = getClientPONumber();

		String clientPONumber = billingCacheModel.clientPONumber;

		if ((clientPONumber != null) && (clientPONumber.length() == 0)) {
			billingCacheModel.clientPONumber = null;
		}

		billingCacheModel.clientGSTNumber = getClientGSTNumber();

		String clientGSTNumber = billingCacheModel.clientGSTNumber;

		if ((clientGSTNumber != null) && (clientGSTNumber.length() == 0)) {
			billingCacheModel.clientGSTNumber = null;
		}

		billingCacheModel.display = getDisplay();

		String display = billingCacheModel.display;

		if ((display != null) && (display.length() == 0)) {
			billingCacheModel.display = null;
		}

		billingCacheModel.accessAmount = getAccessAmount();

		billingCacheModel.pendingAmount = getPendingAmount();

		billingCacheModel.financialYear = getFinancialYear();

		String financialYear = billingCacheModel.financialYear;

		if ((financialYear != null) && (financialYear.length() == 0)) {
			billingCacheModel.financialYear = null;
		}

		billingCacheModel.status = getStatus();

		Date publishDate = getPublishDate();

		if (publishDate != null) {
			billingCacheModel.publishDate = publishDate.getTime();
		}
		else {
			billingCacheModel.publishDate = Long.MIN_VALUE;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			billingCacheModel.createDate = createDate.getTime();
		}
		else {
			billingCacheModel.createDate = Long.MIN_VALUE;
		}

		billingCacheModel.createdBy = getCreatedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			billingCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			billingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		billingCacheModel.modifiedBy = getModifiedBy();

		return billingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(41);

		sb.append("{billingId=");
		sb.append(getBillingId());
		sb.append(", customCompanyId=");
		sb.append(getCustomCompanyId());
		sb.append(", billNo=");
		sb.append(getBillNo());
		sb.append(", internalBillNo=");
		sb.append(getInternalBillNo());
		sb.append(", bookingId=");
		sb.append(getBookingId());
		sb.append(", clientId=");
		sb.append(getClientId());
		sb.append(", billFileEntryId=");
		sb.append(getBillFileEntryId());
		sb.append(", clientPANNo=");
		sb.append(getClientPANNo());
		sb.append(", clientPONumber=");
		sb.append(getClientPONumber());
		sb.append(", clientGSTNumber=");
		sb.append(getClientGSTNumber());
		sb.append(", display=");
		sb.append(getDisplay());
		sb.append(", accessAmount=");
		sb.append(getAccessAmount());
		sb.append(", pendingAmount=");
		sb.append(getPendingAmount());
		sb.append(", financialYear=");
		sb.append(getFinancialYear());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", publishDate=");
		sb.append(getPublishDate());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(64);

		sb.append("<model><model-name>");
		sb.append("com.sphms.common.service.model.Billing");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>billingId</column-name><column-value><![CDATA[");
		sb.append(getBillingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customCompanyId</column-name><column-value><![CDATA[");
		sb.append(getCustomCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billNo</column-name><column-value><![CDATA[");
		sb.append(getBillNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>internalBillNo</column-name><column-value><![CDATA[");
		sb.append(getInternalBillNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bookingId</column-name><column-value><![CDATA[");
		sb.append(getBookingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clientId</column-name><column-value><![CDATA[");
		sb.append(getClientId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getBillFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clientPANNo</column-name><column-value><![CDATA[");
		sb.append(getClientPANNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clientPONumber</column-name><column-value><![CDATA[");
		sb.append(getClientPONumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clientGSTNumber</column-name><column-value><![CDATA[");
		sb.append(getClientGSTNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>display</column-name><column-value><![CDATA[");
		sb.append(getDisplay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accessAmount</column-name><column-value><![CDATA[");
		sb.append(getAccessAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pendingAmount</column-name><column-value><![CDATA[");
		sb.append(getPendingAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>financialYear</column-name><column-value><![CDATA[");
		sb.append(getFinancialYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishDate</column-name><column-value><![CDATA[");
		sb.append(getPublishDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Billing.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Billing.class
		};
	private long _billingId;
	private long _customCompanyId;
	private String _billNo;
	private String _internalBillNo;
	private long _bookingId;
	private long _originalBookingId;
	private boolean _setOriginalBookingId;
	private long _clientId;
	private long _originalClientId;
	private boolean _setOriginalClientId;
	private long _billFileEntryId;
	private String _clientPANNo;
	private String _clientPONumber;
	private String _clientGSTNumber;
	private String _display;
	private double _accessAmount;
	private double _pendingAmount;
	private String _financialYear;
	private int _status;
	private Date _publishDate;
	private Date _createDate;
	private long _createdBy;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _modifiedBy;
	private long _columnBitmask;
	private Billing _escapedModel;
}