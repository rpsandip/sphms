/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sphms.common.service.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.sphms.common.service.model.Billing_PO;
import com.sphms.common.service.model.Billing_POModel;
import com.sphms.common.service.service.persistence.Billing_POPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Billing_PO service. Represents a row in the &quot;SPHMS_Billing_PO&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link Billing_POModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Billing_POImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Billing_POImpl
 * @see Billing_PO
 * @see Billing_POModel
 * @generated
 */
@ProviderType
public class Billing_POModelImpl extends BaseModelImpl<Billing_PO>
	implements Billing_POModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a billing_ p o model instance should use the {@link Billing_PO} interface instead.
	 */
	public static final String TABLE_NAME = "SPHMS_Billing_PO";
	public static final Object[][] TABLE_COLUMNS = {
			{ "billingId", Types.BIGINT },
			{ "hordingId", Types.BIGINT },
			{ "landLordId", Types.BIGINT },
			{ "supplierBillNo", Types.BIGINT },
			{ "supplierBillDate", Types.TIMESTAMP },
			{ "supplierTotalAmount", Types.DOUBLE },
			{ "supplierGstAmmount", Types.DOUBLE },
			{ "poNumber", Types.VARCHAR },
			{ "internalPONumber", Types.VARCHAR },
			{ "financialYear", Types.VARCHAR },
			{ "totalAmount", Types.DOUBLE },
			{ "customCompanyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "createdBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT },
			{ "status", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("billingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("hordingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("landLordId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("supplierBillNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("supplierBillDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("supplierTotalAmount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("supplierGstAmmount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("poNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("internalPONumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("financialYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalAmount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("customCompanyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table SPHMS_Billing_PO (billingId LONG not null,hordingId LONG not null,landLordId LONG,supplierBillNo LONG,supplierBillDate DATE null,supplierTotalAmount DOUBLE,supplierGstAmmount DOUBLE,poNumber VARCHAR(75) null,internalPONumber VARCHAR(75) null,financialYear VARCHAR(75) null,totalAmount DOUBLE,customCompanyId LONG,createDate DATE null,createdBy LONG,modifiedDate DATE null,modifiedBy LONG,status INTEGER,primary key (billingId, hordingId))";
	public static final String TABLE_SQL_DROP = "drop table SPHMS_Billing_PO";
	public static final String ORDER_BY_JPQL = " ORDER BY billing_PO.id.billingId ASC, billing_PO.id.hordingId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPHMS_Billing_PO.billingId ASC, SPHMS_Billing_PO.hordingId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.sphms.common.service.model.Billing_PO"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.sphms.common.service.model.Billing_PO"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.sphms.common.service.model.Billing_PO"),
			true);
	public static final long BILLINGID_COLUMN_BITMASK = 1L;
	public static final long LANDLORDID_COLUMN_BITMASK = 2L;
	public static final long HORDINGID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.sphms.common.service.service.util.PropsUtil.get(
				"lock.expiration.time.com.sphms.common.service.model.Billing_PO"));

	public Billing_POModelImpl() {
	}

	@Override
	public Billing_POPK getPrimaryKey() {
		return new Billing_POPK(_billingId, _hordingId);
	}

	@Override
	public void setPrimaryKey(Billing_POPK primaryKey) {
		setBillingId(primaryKey.billingId);
		setHordingId(primaryKey.hordingId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new Billing_POPK(_billingId, _hordingId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((Billing_POPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Billing_PO.class;
	}

	@Override
	public String getModelClassName() {
		return Billing_PO.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("billingId", getBillingId());
		attributes.put("hordingId", getHordingId());
		attributes.put("landLordId", getLandLordId());
		attributes.put("supplierBillNo", getSupplierBillNo());
		attributes.put("supplierBillDate", getSupplierBillDate());
		attributes.put("supplierTotalAmount", getSupplierTotalAmount());
		attributes.put("supplierGstAmmount", getSupplierGstAmmount());
		attributes.put("poNumber", getPoNumber());
		attributes.put("internalPONumber", getInternalPONumber());
		attributes.put("financialYear", getFinancialYear());
		attributes.put("totalAmount", getTotalAmount());
		attributes.put("customCompanyId", getCustomCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("status", getStatus());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long billingId = (Long)attributes.get("billingId");

		if (billingId != null) {
			setBillingId(billingId);
		}

		Long hordingId = (Long)attributes.get("hordingId");

		if (hordingId != null) {
			setHordingId(hordingId);
		}

		Long landLordId = (Long)attributes.get("landLordId");

		if (landLordId != null) {
			setLandLordId(landLordId);
		}

		Long supplierBillNo = (Long)attributes.get("supplierBillNo");

		if (supplierBillNo != null) {
			setSupplierBillNo(supplierBillNo);
		}

		Date supplierBillDate = (Date)attributes.get("supplierBillDate");

		if (supplierBillDate != null) {
			setSupplierBillDate(supplierBillDate);
		}

		Double supplierTotalAmount = (Double)attributes.get(
				"supplierTotalAmount");

		if (supplierTotalAmount != null) {
			setSupplierTotalAmount(supplierTotalAmount);
		}

		Double supplierGstAmmount = (Double)attributes.get("supplierGstAmmount");

		if (supplierGstAmmount != null) {
			setSupplierGstAmmount(supplierGstAmmount);
		}

		String poNumber = (String)attributes.get("poNumber");

		if (poNumber != null) {
			setPoNumber(poNumber);
		}

		String internalPONumber = (String)attributes.get("internalPONumber");

		if (internalPONumber != null) {
			setInternalPONumber(internalPONumber);
		}

		String financialYear = (String)attributes.get("financialYear");

		if (financialYear != null) {
			setFinancialYear(financialYear);
		}

		Double totalAmount = (Double)attributes.get("totalAmount");

		if (totalAmount != null) {
			setTotalAmount(totalAmount);
		}

		Long customCompanyId = (Long)attributes.get("customCompanyId");

		if (customCompanyId != null) {
			setCustomCompanyId(customCompanyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@Override
	public long getBillingId() {
		return _billingId;
	}

	@Override
	public void setBillingId(long billingId) {
		_columnBitmask |= BILLINGID_COLUMN_BITMASK;

		if (!_setOriginalBillingId) {
			_setOriginalBillingId = true;

			_originalBillingId = _billingId;
		}

		_billingId = billingId;
	}

	public long getOriginalBillingId() {
		return _originalBillingId;
	}

	@Override
	public long getHordingId() {
		return _hordingId;
	}

	@Override
	public void setHordingId(long hordingId) {
		_hordingId = hordingId;
	}

	@Override
	public long getLandLordId() {
		return _landLordId;
	}

	@Override
	public void setLandLordId(long landLordId) {
		_columnBitmask |= LANDLORDID_COLUMN_BITMASK;

		if (!_setOriginalLandLordId) {
			_setOriginalLandLordId = true;

			_originalLandLordId = _landLordId;
		}

		_landLordId = landLordId;
	}

	public long getOriginalLandLordId() {
		return _originalLandLordId;
	}

	@Override
	public long getSupplierBillNo() {
		return _supplierBillNo;
	}

	@Override
	public void setSupplierBillNo(long supplierBillNo) {
		_supplierBillNo = supplierBillNo;
	}

	@Override
	public Date getSupplierBillDate() {
		return _supplierBillDate;
	}

	@Override
	public void setSupplierBillDate(Date supplierBillDate) {
		_supplierBillDate = supplierBillDate;
	}

	@Override
	public double getSupplierTotalAmount() {
		return _supplierTotalAmount;
	}

	@Override
	public void setSupplierTotalAmount(double supplierTotalAmount) {
		_supplierTotalAmount = supplierTotalAmount;
	}

	@Override
	public double getSupplierGstAmmount() {
		return _supplierGstAmmount;
	}

	@Override
	public void setSupplierGstAmmount(double supplierGstAmmount) {
		_supplierGstAmmount = supplierGstAmmount;
	}

	@Override
	public String getPoNumber() {
		if (_poNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _poNumber;
		}
	}

	@Override
	public void setPoNumber(String poNumber) {
		_poNumber = poNumber;
	}

	@Override
	public String getInternalPONumber() {
		if (_internalPONumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _internalPONumber;
		}
	}

	@Override
	public void setInternalPONumber(String internalPONumber) {
		_internalPONumber = internalPONumber;
	}

	@Override
	public String getFinancialYear() {
		if (_financialYear == null) {
			return StringPool.BLANK;
		}
		else {
			return _financialYear;
		}
	}

	@Override
	public void setFinancialYear(String financialYear) {
		_financialYear = financialYear;
	}

	@Override
	public double getTotalAmount() {
		return _totalAmount;
	}

	@Override
	public void setTotalAmount(double totalAmount) {
		_totalAmount = totalAmount;
	}

	@Override
	public long getCustomCompanyId() {
		return _customCompanyId;
	}

	@Override
	public void setCustomCompanyId(long customCompanyId) {
		_customCompanyId = customCompanyId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Billing_PO toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Billing_PO)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Billing_POImpl billing_POImpl = new Billing_POImpl();

		billing_POImpl.setBillingId(getBillingId());
		billing_POImpl.setHordingId(getHordingId());
		billing_POImpl.setLandLordId(getLandLordId());
		billing_POImpl.setSupplierBillNo(getSupplierBillNo());
		billing_POImpl.setSupplierBillDate(getSupplierBillDate());
		billing_POImpl.setSupplierTotalAmount(getSupplierTotalAmount());
		billing_POImpl.setSupplierGstAmmount(getSupplierGstAmmount());
		billing_POImpl.setPoNumber(getPoNumber());
		billing_POImpl.setInternalPONumber(getInternalPONumber());
		billing_POImpl.setFinancialYear(getFinancialYear());
		billing_POImpl.setTotalAmount(getTotalAmount());
		billing_POImpl.setCustomCompanyId(getCustomCompanyId());
		billing_POImpl.setCreateDate(getCreateDate());
		billing_POImpl.setCreatedBy(getCreatedBy());
		billing_POImpl.setModifiedDate(getModifiedDate());
		billing_POImpl.setModifiedBy(getModifiedBy());
		billing_POImpl.setStatus(getStatus());

		billing_POImpl.resetOriginalValues();

		return billing_POImpl;
	}

	@Override
	public int compareTo(Billing_PO billing_PO) {
		Billing_POPK primaryKey = billing_PO.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Billing_PO)) {
			return false;
		}

		Billing_PO billing_PO = (Billing_PO)obj;

		Billing_POPK primaryKey = billing_PO.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		Billing_POModelImpl billing_POModelImpl = this;

		billing_POModelImpl._originalBillingId = billing_POModelImpl._billingId;

		billing_POModelImpl._setOriginalBillingId = false;

		billing_POModelImpl._originalLandLordId = billing_POModelImpl._landLordId;

		billing_POModelImpl._setOriginalLandLordId = false;

		billing_POModelImpl._setModifiedDate = false;

		billing_POModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Billing_PO> toCacheModel() {
		Billing_POCacheModel billing_POCacheModel = new Billing_POCacheModel();

		billing_POCacheModel.billing_POPK = getPrimaryKey();

		billing_POCacheModel.billingId = getBillingId();

		billing_POCacheModel.hordingId = getHordingId();

		billing_POCacheModel.landLordId = getLandLordId();

		billing_POCacheModel.supplierBillNo = getSupplierBillNo();

		Date supplierBillDate = getSupplierBillDate();

		if (supplierBillDate != null) {
			billing_POCacheModel.supplierBillDate = supplierBillDate.getTime();
		}
		else {
			billing_POCacheModel.supplierBillDate = Long.MIN_VALUE;
		}

		billing_POCacheModel.supplierTotalAmount = getSupplierTotalAmount();

		billing_POCacheModel.supplierGstAmmount = getSupplierGstAmmount();

		billing_POCacheModel.poNumber = getPoNumber();

		String poNumber = billing_POCacheModel.poNumber;

		if ((poNumber != null) && (poNumber.length() == 0)) {
			billing_POCacheModel.poNumber = null;
		}

		billing_POCacheModel.internalPONumber = getInternalPONumber();

		String internalPONumber = billing_POCacheModel.internalPONumber;

		if ((internalPONumber != null) && (internalPONumber.length() == 0)) {
			billing_POCacheModel.internalPONumber = null;
		}

		billing_POCacheModel.financialYear = getFinancialYear();

		String financialYear = billing_POCacheModel.financialYear;

		if ((financialYear != null) && (financialYear.length() == 0)) {
			billing_POCacheModel.financialYear = null;
		}

		billing_POCacheModel.totalAmount = getTotalAmount();

		billing_POCacheModel.customCompanyId = getCustomCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			billing_POCacheModel.createDate = createDate.getTime();
		}
		else {
			billing_POCacheModel.createDate = Long.MIN_VALUE;
		}

		billing_POCacheModel.createdBy = getCreatedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			billing_POCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			billing_POCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		billing_POCacheModel.modifiedBy = getModifiedBy();

		billing_POCacheModel.status = getStatus();

		return billing_POCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{billingId=");
		sb.append(getBillingId());
		sb.append(", hordingId=");
		sb.append(getHordingId());
		sb.append(", landLordId=");
		sb.append(getLandLordId());
		sb.append(", supplierBillNo=");
		sb.append(getSupplierBillNo());
		sb.append(", supplierBillDate=");
		sb.append(getSupplierBillDate());
		sb.append(", supplierTotalAmount=");
		sb.append(getSupplierTotalAmount());
		sb.append(", supplierGstAmmount=");
		sb.append(getSupplierGstAmmount());
		sb.append(", poNumber=");
		sb.append(getPoNumber());
		sb.append(", internalPONumber=");
		sb.append(getInternalPONumber());
		sb.append(", financialYear=");
		sb.append(getFinancialYear());
		sb.append(", totalAmount=");
		sb.append(getTotalAmount());
		sb.append(", customCompanyId=");
		sb.append(getCustomCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com.sphms.common.service.model.Billing_PO");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>billingId</column-name><column-value><![CDATA[");
		sb.append(getBillingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hordingId</column-name><column-value><![CDATA[");
		sb.append(getHordingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>landLordId</column-name><column-value><![CDATA[");
		sb.append(getLandLordId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierBillNo</column-name><column-value><![CDATA[");
		sb.append(getSupplierBillNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierBillDate</column-name><column-value><![CDATA[");
		sb.append(getSupplierBillDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierTotalAmount</column-name><column-value><![CDATA[");
		sb.append(getSupplierTotalAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierGstAmmount</column-name><column-value><![CDATA[");
		sb.append(getSupplierGstAmmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>poNumber</column-name><column-value><![CDATA[");
		sb.append(getPoNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>internalPONumber</column-name><column-value><![CDATA[");
		sb.append(getInternalPONumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>financialYear</column-name><column-value><![CDATA[");
		sb.append(getFinancialYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalAmount</column-name><column-value><![CDATA[");
		sb.append(getTotalAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customCompanyId</column-name><column-value><![CDATA[");
		sb.append(getCustomCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Billing_PO.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Billing_PO.class
		};
	private long _billingId;
	private long _originalBillingId;
	private boolean _setOriginalBillingId;
	private long _hordingId;
	private long _landLordId;
	private long _originalLandLordId;
	private boolean _setOriginalLandLordId;
	private long _supplierBillNo;
	private Date _supplierBillDate;
	private double _supplierTotalAmount;
	private double _supplierGstAmmount;
	private String _poNumber;
	private String _internalPONumber;
	private String _financialYear;
	private double _totalAmount;
	private long _customCompanyId;
	private Date _createDate;
	private long _createdBy;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _modifiedBy;
	private int _status;
	private long _columnBitmask;
	private Billing_PO _escapedModel;
}