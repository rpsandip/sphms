/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sphms.common.service.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.sphms.common.service.model.CustomCompany;
import com.sphms.common.service.model.CustomCompanyModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CustomCompany service. Represents a row in the &quot;SPHMS_CustomCompany&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CustomCompanyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CustomCompanyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CustomCompanyImpl
 * @see CustomCompany
 * @see CustomCompanyModel
 * @generated
 */
@ProviderType
public class CustomCompanyModelImpl extends BaseModelImpl<CustomCompany>
	implements CustomCompanyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a custom company model instance should use the {@link CustomCompany} interface instead.
	 */
	public static final String TABLE_NAME = "SPHMS_CustomCompany";
	public static final Object[][] TABLE_COLUMNS = {
			{ "companyId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "GSTNo", Types.VARCHAR },
			{ "PANNo", Types.VARCHAR },
			{ "bankName", Types.VARCHAR },
			{ "accountDetail", Types.VARCHAR },
			{ "poPrefix", Types.VARCHAR },
			{ "shortName", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("GSTNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PANNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bankName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accountDetail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("poPrefix", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shortName", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table SPHMS_CustomCompany (companyId LONG not null primary key,name VARCHAR(75) null,GSTNo VARCHAR(75) null,PANNo VARCHAR(75) null,bankName VARCHAR(75) null,accountDetail VARCHAR(75) null,poPrefix VARCHAR(75) null,shortName VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPHMS_CustomCompany";
	public static final String ORDER_BY_JPQL = " ORDER BY customCompany.companyId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPHMS_CustomCompany.companyId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.sphms.common.service.model.CustomCompany"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.sphms.common.service.model.CustomCompany"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.sphms.common.service.service.util.PropsUtil.get(
				"lock.expiration.time.com.sphms.common.service.model.CustomCompany"));

	public CustomCompanyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _companyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCompanyId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _companyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CustomCompany.class;
	}

	@Override
	public String getModelClassName() {
		return CustomCompany.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("companyId", getCompanyId());
		attributes.put("name", getName());
		attributes.put("GSTNo", getGSTNo());
		attributes.put("PANNo", getPANNo());
		attributes.put("bankName", getBankName());
		attributes.put("accountDetail", getAccountDetail());
		attributes.put("poPrefix", getPoPrefix());
		attributes.put("shortName", getShortName());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String GSTNo = (String)attributes.get("GSTNo");

		if (GSTNo != null) {
			setGSTNo(GSTNo);
		}

		String PANNo = (String)attributes.get("PANNo");

		if (PANNo != null) {
			setPANNo(PANNo);
		}

		String bankName = (String)attributes.get("bankName");

		if (bankName != null) {
			setBankName(bankName);
		}

		String accountDetail = (String)attributes.get("accountDetail");

		if (accountDetail != null) {
			setAccountDetail(accountDetail);
		}

		String poPrefix = (String)attributes.get("poPrefix");

		if (poPrefix != null) {
			setPoPrefix(poPrefix);
		}

		String shortName = (String)attributes.get("shortName");

		if (shortName != null) {
			setShortName(shortName);
		}
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getGSTNo() {
		if (_GSTNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _GSTNo;
		}
	}

	@Override
	public void setGSTNo(String GSTNo) {
		_GSTNo = GSTNo;
	}

	@Override
	public String getPANNo() {
		if (_PANNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _PANNo;
		}
	}

	@Override
	public void setPANNo(String PANNo) {
		_PANNo = PANNo;
	}

	@Override
	public String getBankName() {
		if (_bankName == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankName;
		}
	}

	@Override
	public void setBankName(String bankName) {
		_bankName = bankName;
	}

	@Override
	public String getAccountDetail() {
		if (_accountDetail == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountDetail;
		}
	}

	@Override
	public void setAccountDetail(String accountDetail) {
		_accountDetail = accountDetail;
	}

	@Override
	public String getPoPrefix() {
		if (_poPrefix == null) {
			return StringPool.BLANK;
		}
		else {
			return _poPrefix;
		}
	}

	@Override
	public void setPoPrefix(String poPrefix) {
		_poPrefix = poPrefix;
	}

	@Override
	public String getShortName() {
		if (_shortName == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortName;
		}
	}

	@Override
	public void setShortName(String shortName) {
		_shortName = shortName;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CustomCompany.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CustomCompany toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CustomCompany)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CustomCompanyImpl customCompanyImpl = new CustomCompanyImpl();

		customCompanyImpl.setCompanyId(getCompanyId());
		customCompanyImpl.setName(getName());
		customCompanyImpl.setGSTNo(getGSTNo());
		customCompanyImpl.setPANNo(getPANNo());
		customCompanyImpl.setBankName(getBankName());
		customCompanyImpl.setAccountDetail(getAccountDetail());
		customCompanyImpl.setPoPrefix(getPoPrefix());
		customCompanyImpl.setShortName(getShortName());

		customCompanyImpl.resetOriginalValues();

		return customCompanyImpl;
	}

	@Override
	public int compareTo(CustomCompany customCompany) {
		long primaryKey = customCompany.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CustomCompany)) {
			return false;
		}

		CustomCompany customCompany = (CustomCompany)obj;

		long primaryKey = customCompany.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CustomCompany> toCacheModel() {
		CustomCompanyCacheModel customCompanyCacheModel = new CustomCompanyCacheModel();

		customCompanyCacheModel.companyId = getCompanyId();

		customCompanyCacheModel.name = getName();

		String name = customCompanyCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			customCompanyCacheModel.name = null;
		}

		customCompanyCacheModel.GSTNo = getGSTNo();

		String GSTNo = customCompanyCacheModel.GSTNo;

		if ((GSTNo != null) && (GSTNo.length() == 0)) {
			customCompanyCacheModel.GSTNo = null;
		}

		customCompanyCacheModel.PANNo = getPANNo();

		String PANNo = customCompanyCacheModel.PANNo;

		if ((PANNo != null) && (PANNo.length() == 0)) {
			customCompanyCacheModel.PANNo = null;
		}

		customCompanyCacheModel.bankName = getBankName();

		String bankName = customCompanyCacheModel.bankName;

		if ((bankName != null) && (bankName.length() == 0)) {
			customCompanyCacheModel.bankName = null;
		}

		customCompanyCacheModel.accountDetail = getAccountDetail();

		String accountDetail = customCompanyCacheModel.accountDetail;

		if ((accountDetail != null) && (accountDetail.length() == 0)) {
			customCompanyCacheModel.accountDetail = null;
		}

		customCompanyCacheModel.poPrefix = getPoPrefix();

		String poPrefix = customCompanyCacheModel.poPrefix;

		if ((poPrefix != null) && (poPrefix.length() == 0)) {
			customCompanyCacheModel.poPrefix = null;
		}

		customCompanyCacheModel.shortName = getShortName();

		String shortName = customCompanyCacheModel.shortName;

		if ((shortName != null) && (shortName.length() == 0)) {
			customCompanyCacheModel.shortName = null;
		}

		return customCompanyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{companyId=");
		sb.append(getCompanyId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", GSTNo=");
		sb.append(getGSTNo());
		sb.append(", PANNo=");
		sb.append(getPANNo());
		sb.append(", bankName=");
		sb.append(getBankName());
		sb.append(", accountDetail=");
		sb.append(getAccountDetail());
		sb.append(", poPrefix=");
		sb.append(getPoPrefix());
		sb.append(", shortName=");
		sb.append(getShortName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.sphms.common.service.model.CustomCompany");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>GSTNo</column-name><column-value><![CDATA[");
		sb.append(getGSTNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PANNo</column-name><column-value><![CDATA[");
		sb.append(getPANNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankName</column-name><column-value><![CDATA[");
		sb.append(getBankName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountDetail</column-name><column-value><![CDATA[");
		sb.append(getAccountDetail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>poPrefix</column-name><column-value><![CDATA[");
		sb.append(getPoPrefix());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortName</column-name><column-value><![CDATA[");
		sb.append(getShortName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CustomCompany.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CustomCompany.class
		};
	private long _companyId;
	private String _name;
	private String _GSTNo;
	private String _PANNo;
	private String _bankName;
	private String _accountDetail;
	private String _poPrefix;
	private String _shortName;
	private CustomCompany _escapedModel;
}