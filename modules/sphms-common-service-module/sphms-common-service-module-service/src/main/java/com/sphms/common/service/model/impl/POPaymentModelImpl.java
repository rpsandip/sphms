/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sphms.common.service.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.sphms.common.service.model.POPayment;
import com.sphms.common.service.model.POPaymentModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the POPayment service. Represents a row in the &quot;SPHMS_POPayment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link POPaymentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link POPaymentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see POPaymentImpl
 * @see POPayment
 * @see POPaymentModel
 * @generated
 */
@ProviderType
public class POPaymentModelImpl extends BaseModelImpl<POPayment>
	implements POPaymentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a p o payment model instance should use the {@link POPayment} interface instead.
	 */
	public static final String TABLE_NAME = "SPHMS_POPayment";
	public static final Object[][] TABLE_COLUMNS = {
			{ "poPaymentId", Types.BIGINT },
			{ "billingId", Types.BIGINT },
			{ "landLordId", Types.BIGINT },
			{ "amount", Types.DOUBLE },
			{ "gst", Types.DOUBLE },
			{ "chequeNo", Types.VARCHAR },
			{ "paymentDate", Types.TIMESTAMP },
			{ "createDate", Types.TIMESTAMP },
			{ "createdBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("poPaymentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("billingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("landLordId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("amount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("gst", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("chequeNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paymentDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table SPHMS_POPayment (poPaymentId LONG not null primary key,billingId LONG,landLordId LONG,amount DOUBLE,gst DOUBLE,chequeNo VARCHAR(75) null,paymentDate DATE null,createDate DATE null,createdBy LONG,modifiedDate DATE null,modifiedBy LONG)";
	public static final String TABLE_SQL_DROP = "drop table SPHMS_POPayment";
	public static final String ORDER_BY_JPQL = " ORDER BY poPayment.poPaymentId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPHMS_POPayment.poPaymentId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.sphms.common.service.model.POPayment"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.sphms.common.service.model.POPayment"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.sphms.common.service.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.sphms.common.service.model.POPayment"),
			true);
	public static final long BILLINGID_COLUMN_BITMASK = 1L;
	public static final long LANDLORDID_COLUMN_BITMASK = 2L;
	public static final long POPAYMENTID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.sphms.common.service.service.util.PropsUtil.get(
				"lock.expiration.time.com.sphms.common.service.model.POPayment"));

	public POPaymentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _poPaymentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPoPaymentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _poPaymentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return POPayment.class;
	}

	@Override
	public String getModelClassName() {
		return POPayment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("poPaymentId", getPoPaymentId());
		attributes.put("billingId", getBillingId());
		attributes.put("landLordId", getLandLordId());
		attributes.put("amount", getAmount());
		attributes.put("gst", getGst());
		attributes.put("chequeNo", getChequeNo());
		attributes.put("paymentDate", getPaymentDate());
		attributes.put("createDate", getCreateDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("modifiedBy", getModifiedBy());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long poPaymentId = (Long)attributes.get("poPaymentId");

		if (poPaymentId != null) {
			setPoPaymentId(poPaymentId);
		}

		Long billingId = (Long)attributes.get("billingId");

		if (billingId != null) {
			setBillingId(billingId);
		}

		Long landLordId = (Long)attributes.get("landLordId");

		if (landLordId != null) {
			setLandLordId(landLordId);
		}

		Double amount = (Double)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		Double gst = (Double)attributes.get("gst");

		if (gst != null) {
			setGst(gst);
		}

		String chequeNo = (String)attributes.get("chequeNo");

		if (chequeNo != null) {
			setChequeNo(chequeNo);
		}

		Date paymentDate = (Date)attributes.get("paymentDate");

		if (paymentDate != null) {
			setPaymentDate(paymentDate);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}
	}

	@Override
	public long getPoPaymentId() {
		return _poPaymentId;
	}

	@Override
	public void setPoPaymentId(long poPaymentId) {
		_poPaymentId = poPaymentId;
	}

	@Override
	public long getBillingId() {
		return _billingId;
	}

	@Override
	public void setBillingId(long billingId) {
		_columnBitmask |= BILLINGID_COLUMN_BITMASK;

		if (!_setOriginalBillingId) {
			_setOriginalBillingId = true;

			_originalBillingId = _billingId;
		}

		_billingId = billingId;
	}

	public long getOriginalBillingId() {
		return _originalBillingId;
	}

	@Override
	public long getLandLordId() {
		return _landLordId;
	}

	@Override
	public void setLandLordId(long landLordId) {
		_columnBitmask |= LANDLORDID_COLUMN_BITMASK;

		if (!_setOriginalLandLordId) {
			_setOriginalLandLordId = true;

			_originalLandLordId = _landLordId;
		}

		_landLordId = landLordId;
	}

	public long getOriginalLandLordId() {
		return _originalLandLordId;
	}

	@Override
	public double getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(double amount) {
		_amount = amount;
	}

	@Override
	public double getGst() {
		return _gst;
	}

	@Override
	public void setGst(double gst) {
		_gst = gst;
	}

	@Override
	public String getChequeNo() {
		if (_chequeNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _chequeNo;
		}
	}

	@Override
	public void setChequeNo(String chequeNo) {
		_chequeNo = chequeNo;
	}

	@Override
	public Date getPaymentDate() {
		return _paymentDate;
	}

	@Override
	public void setPaymentDate(Date paymentDate) {
		_paymentDate = paymentDate;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			POPayment.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public POPayment toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (POPayment)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		POPaymentImpl poPaymentImpl = new POPaymentImpl();

		poPaymentImpl.setPoPaymentId(getPoPaymentId());
		poPaymentImpl.setBillingId(getBillingId());
		poPaymentImpl.setLandLordId(getLandLordId());
		poPaymentImpl.setAmount(getAmount());
		poPaymentImpl.setGst(getGst());
		poPaymentImpl.setChequeNo(getChequeNo());
		poPaymentImpl.setPaymentDate(getPaymentDate());
		poPaymentImpl.setCreateDate(getCreateDate());
		poPaymentImpl.setCreatedBy(getCreatedBy());
		poPaymentImpl.setModifiedDate(getModifiedDate());
		poPaymentImpl.setModifiedBy(getModifiedBy());

		poPaymentImpl.resetOriginalValues();

		return poPaymentImpl;
	}

	@Override
	public int compareTo(POPayment poPayment) {
		long primaryKey = poPayment.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof POPayment)) {
			return false;
		}

		POPayment poPayment = (POPayment)obj;

		long primaryKey = poPayment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		POPaymentModelImpl poPaymentModelImpl = this;

		poPaymentModelImpl._originalBillingId = poPaymentModelImpl._billingId;

		poPaymentModelImpl._setOriginalBillingId = false;

		poPaymentModelImpl._originalLandLordId = poPaymentModelImpl._landLordId;

		poPaymentModelImpl._setOriginalLandLordId = false;

		poPaymentModelImpl._setModifiedDate = false;

		poPaymentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<POPayment> toCacheModel() {
		POPaymentCacheModel poPaymentCacheModel = new POPaymentCacheModel();

		poPaymentCacheModel.poPaymentId = getPoPaymentId();

		poPaymentCacheModel.billingId = getBillingId();

		poPaymentCacheModel.landLordId = getLandLordId();

		poPaymentCacheModel.amount = getAmount();

		poPaymentCacheModel.gst = getGst();

		poPaymentCacheModel.chequeNo = getChequeNo();

		String chequeNo = poPaymentCacheModel.chequeNo;

		if ((chequeNo != null) && (chequeNo.length() == 0)) {
			poPaymentCacheModel.chequeNo = null;
		}

		Date paymentDate = getPaymentDate();

		if (paymentDate != null) {
			poPaymentCacheModel.paymentDate = paymentDate.getTime();
		}
		else {
			poPaymentCacheModel.paymentDate = Long.MIN_VALUE;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			poPaymentCacheModel.createDate = createDate.getTime();
		}
		else {
			poPaymentCacheModel.createDate = Long.MIN_VALUE;
		}

		poPaymentCacheModel.createdBy = getCreatedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			poPaymentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			poPaymentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		poPaymentCacheModel.modifiedBy = getModifiedBy();

		return poPaymentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{poPaymentId=");
		sb.append(getPoPaymentId());
		sb.append(", billingId=");
		sb.append(getBillingId());
		sb.append(", landLordId=");
		sb.append(getLandLordId());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", gst=");
		sb.append(getGst());
		sb.append(", chequeNo=");
		sb.append(getChequeNo());
		sb.append(", paymentDate=");
		sb.append(getPaymentDate());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.sphms.common.service.model.POPayment");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>poPaymentId</column-name><column-value><![CDATA[");
		sb.append(getPoPaymentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingId</column-name><column-value><![CDATA[");
		sb.append(getBillingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>landLordId</column-name><column-value><![CDATA[");
		sb.append(getLandLordId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gst</column-name><column-value><![CDATA[");
		sb.append(getGst());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>chequeNo</column-name><column-value><![CDATA[");
		sb.append(getChequeNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentDate</column-name><column-value><![CDATA[");
		sb.append(getPaymentDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = POPayment.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			POPayment.class
		};
	private long _poPaymentId;
	private long _billingId;
	private long _originalBillingId;
	private boolean _setOriginalBillingId;
	private long _landLordId;
	private long _originalLandLordId;
	private boolean _setOriginalLandLordId;
	private double _amount;
	private double _gst;
	private String _chequeNo;
	private Date _paymentDate;
	private Date _createDate;
	private long _createdBy;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _modifiedBy;
	private long _columnBitmask;
	private POPayment _escapedModel;
}